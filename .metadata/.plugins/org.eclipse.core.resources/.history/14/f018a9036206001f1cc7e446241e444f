package pages;


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.How;

public class LoginPage {
	WebDriver driver;

	// special method as same name as the class name; no access modifier - static OR
	// Non static;
	// no return type - Constructor:

	public LoginPage(WebDriver driver) {
		this.driver = driver;
	}
	
	// Object initiation we can do as a Global declaration
	// But defining webElement object we have to do inside the methods only not as Global
	
		// Element Library
	@FindBy(how = How.XPATH, using = "//input[@id='user_name']")
	WebElement UserName;
	
	@FindBy(how = How.XPATH, using = "//input[@id='password']")
	WebElement Password;
	
	@FindBy(how = How.XPATH, using = "//button[@id='login_submit']")
	WebElement SignInButton;
	
	@FindBy(how = How.XPATH, using = "//span[text()='List Accounts']")
	WebElement ListAccountsButton;
	
	@FindBy(how = How.XPATH, using = "//button[@class='btn btn-primary']")
	WebElement AddAccountButton;
	
	@FindBy(how = How.XPATH, using = "//h5[@id='accountModalLabel']")
	WebElement NewAccount;
	
	@FindBy(how = How.XPATH, using = "//input[@id='account_name']")
	WebElement AccountName;
	
	@FindBy(how = How.XPATH, using = "//textarea[@id='description']")
	WebElement Description;
	
	@FindBy(how = How.XPATH, using = "//input[@id='balance']")
	WebElement InitialBalance;
	
	@FindBy(how = How.XPATH, using = "//input[@id='account_number']")
	WebElement AccountNumber;
	
	@FindBy(how = How.XPATH, using = "//input[@id='contact_person']")
	WebElement ContactPerson;
	
	@FindBy(how = How.XPATH, using = "//button[@id='accountSave']")
	WebElement SaveButton;
	
	
	// Methods to interact with the elements
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void enterPassword(String password) {
		Password.sendKeys(password);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void clickSignInButton() {
		SignInButton.click();

		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public String getPageTitle() {
		return driver.getTitle();

	}
	

	public void clickListAccountsButton() {
		ListAccountsButton.click();

		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	public void clickAddAccountButton() {
		AddAccountButton.click();

		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterAccountName(String accountName) {
		AccountName.sendKeys(accountName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	public void enterUserName(String userName) {
		UserName.sendKeys(userName);
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
}
